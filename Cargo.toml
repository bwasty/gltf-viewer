[package]
name = "gltf-viewer"
version = "0.4.2-alpha.0"
authors = ["Benjamin Wasty <benny.wasty@gmail.com>"]
edition = "2018"
categories = ["rendering"]
description = "Simple glTF 2.0 viewer"
include = [
    "Cargo.toml",
    "Cargo.lock", # Note: currently ignored by `cargo package`, see rust-lang/cargo#2263
    "**/*.rs",
    "src/shaders/*.*",
]
keywords = ["glTF", "3D", "model", "scene", "viewer"]
license = "Unlicense"
readme = "README.md"
repository = "https://github.com/bwasty/gltf-viewer"
build = false # TODO: git-version doesn't work on Travis

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["clap","gl","glutin","simplelog"]
use_wasm_bindgen = ["wasm-bindgen","js-sys","web-sys","console_error_panic_hook"]

[badges]
maintenance = { status = "passively-maintained" }

[badges.travis-ci]
branch = "master"
repository = "bwasty/gltf-viewer"

[dependencies]
base64 = "0.10.1"
bitflags = "1.0.4"
cgmath = "0.16.0"
clap = { version = "2.32.0", optional = true }
collision = "0.19.0"
futures = "^0.1.26"
# futures-cpupool = "0.1.5"
gl = { version = "0.11.0", optional = true }
glutin = { version = "0.18.0", optional = true }
image = { version = "0.21.0", default-features = false, features = ["jpeg", "png_codec"] }
js-sys = { version = "0.3.28", optional = true }
# reqwest = "0.7.3"
log = "0.4.6"
num-traits = "0.2.6"
simplelog = { version = "0.5.3", optional = true }
# itertools = "0.6.3"

wasm-bindgen = { version="^0.2.50", optional=true }

[dependencies.gltf]
version = "0.14.0"
features = ["names"]

# [dependencies.mikktspace]
# git = "https://github.com/gltf-rs/mikktspace"

# The `web-sys` crate allows you to interact with the various browser APIs,
# like the DOM.
[dependencies.web-sys]
version = "0.3.22"
optional = true
features = [
  'CssStyleDeclaration',
  'Document',
  'Element',
  'Event',
  'EventTarget',
  'HtmlCanvasElement',
  'HtmlElement',
  'HtmlImageElement',
  'HtmlInputElement',
  'InputEvent',
  'MouseEvent',
  'Node',
  'Touch',
  'TouchEvent',
  'TouchList',
  'UiEvent',
  'WebGlBuffer',
  'WebGlFramebuffer',
  'WebGlProgram',
  'WebGlRenderbuffer',
  'WebGl2RenderingContext',
  'WebGlShader',
  'WebGlTexture',
  'WebGlUniformLocation',
  'WebGlVertexArrayObject',
  'WheelEvent',
  'Window',
  'console',
]

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so it's only enabled
# in debug mode.
[target."cfg(debug_assertions)".dependencies]
console_error_panic_hook = {version="0.1.5",optional=true}

[build-dependencies]
git-version = "0.2.1"

# [profile.dev]
# opt-level = 2
# debug = false

# [profile.release]
# opt-level = 3
# lto = true
